name: Java CI/CD Pipeline with Gradle and Docker

on:
  push:
    branches:
      - master  # Trigger on push to the master branch
  pull_request:
    branches:
      - master  # Trigger on pull request to the master branch

jobs:
  # Job 1: Build Java project with Gradle
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'  # Updated from 'adoptopenjdk' to 'temurin'
          java-package: jdk
          architecture: x64
          check-latest: false

      # Set up Gradle (Optional step: If you want to use a specific version of Gradle)
      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v1

      # Build the project with Gradle
      - name: Build with Gradle
        run: ./gradlew build

  # Job 2: Build Docker Image and Push to Docker Hub
  docker-build:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job finishes before this job runs

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t my-app:latest .

      # Tag the Docker image with a version and the repository name
      - name: Tag Docker image
        run: |
          docker tag my-app:latest zainmk280/my-app:latest

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push zainmk280/my-app:latest

  # Optional: Notify if there are issues with deployment (could be Slack, email, etc.)
  notify:
    runs-on: ubuntu-latest
    needs: docker-build  # Run after Docker build and push

    steps:
      - name: Notify on failure
        if: failure()
        run: |
          echo "Build or Docker push failed, send notification here"
